<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security" xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
  <context:component-scan base-package="com.asu.cse545.group12.controller" />
  <context:property-placeholder location="classpath:database.properties" />
  <mvc:annotation-driven />
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${database.driver}" />
    <property name="url" value="${database.url}" />
    <property name="username" value="${database.user}" />
    <property name="password" value="${database.password}" />
  </bean>
  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="annotatedClasses">
      <list>
        <value>com.asu.cse545.group12.domain.Users</value>
        <value>com.asu.cse545.group12.domain.UserPII</value>
        <value>com.asu.cse545.group12.domain.Account</value>
        <value>com.asu.cse545.group12.domain.Authorization</value>
        <value>com.asu.cse545.group12.domain.Role</value>
        <value>com.asu.cse545.group12.domain.Transactions</value>
        <value>com.asu.cse545.group12.domain.Transfer</value>
        <value>com.asu.cse545.group12.domain.Form</value>
        <value>com.asu.cse545.group12.domain.SecurityQuestions</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
      </props>
    </property>
  </bean>
  <mvc:resources location="/web_resources/" mapping="/web_resources/**" />
  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    <property name="defaultLocale" value="en" />
  </bean>
  <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
    <property name="paramName" value="language" />
  </bean>
  <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
    <property name="interceptors">
      <list>
        <ref bean="localeChangeInterceptor" />
      </list>
    </property>
  </bean>
  <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix">
      <value>/WEB-INF/jsp/</value>
    </property>
    <property name="suffix">
      <value>.jsp</value>
    </property>
  </bean>
  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename">
      <value>messages</value>
    </property>
  </bean>
  <mvc:resources mapping="/resources/**" location="/resources/" />
  <security:http pattern="/web_resources/**" security="none" />
  <security:http auto-config="true" use-expressions="true" disable-url-rewriting="true">
    <security:form-login login-page="/login.html" login-processing-url="/j_spring_security_check" default-target-url="/home.html" authentication-success-handler-ref="authenticationSuccessRedirecthandler" authentication-failure-url="/login.html?error=true" always-use-default-target="true" username-parameter="username" password-parameter="password" />
    <security:logout logout-url="/logout" delete-cookies="JSESSIONID" success-handler-ref="logOutSuccessRedirecthandler" />
    <security:intercept-url pattern="/j_spring_security_check" access="permitAll" />
    <security:intercept-url pattern="/login*" access="permitAll" />
    <security:intercept-url pattern="/logout*" access="permitAll" />
    <security:intercept-url pattern="/index*" access="permitAll" />
    <security:intercept-url pattern="/signup*" access="permitAll" />
    <security:intercept-url pattern="/404*" access="permitAll" />
    <security:intercept-url pattern="/forgetPassword*" access="permitAll" />
    <security:intercept-url pattern="/notifications*" access="isAuthenticated()" />
    <security:intercept-url pattern="/authorizationrequest*" access="isAuthenticated()" />
    <security:intercept-url pattern="/viewExternalprofile*" access="permitAll" />
    <security:intercept-url pattern="/createEmployee*" access="hasRole('ADMIN')" />
    <security:intercept-url pattern="/credit*" access="hasAnyRole('INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/debit*" access="hasAnyRole('INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/displayuserlist*" access="hasAnyRole('REGULAR','MANAGER','ADMIN')" />
    <security:intercept-url pattern="/individual*" access="hasRole('INDIVIDUAL')" />
    <security:intercept-url pattern="/merchant*" access="hasAnyRole('MERCHANT')" />
    <security:intercept-url pattern="/regular*" access="hasAnyRole('REGULAR')" />
    <security:intercept-url pattern="/manager*" access="hasAnyRole('MANAGER')" />
    <security:intercept-url pattern="/admin*" access="hasAnyRole('ADMIN')" />
    <security:intercept-url pattern="/profile*" access="isAuthenticated()" />
    <security:intercept-url pattern="/searchTransaction*" access="hasAnyRole('REGULAR','MANAGER')" />
    <security:intercept-url pattern="/searchUser*" access="hasAnyRole('REGULAR','MANAGER','ADMIN')" />
    <security:intercept-url pattern="/signUpOTP*" access="permitAll" />
    <security:intercept-url pattern="/transfer*" access="hasAnyRole('INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/successfulSignUp*" access="permitAll" />
    <security:intercept-url pattern="/enterSignupOTP*" access="permitAll" />
    <security:intercept-url pattern="/notifications*" access="hasAnyRole('REGULAR','MANAGER','ADMIN','INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/addSecurityQuestions*" access="hasAnyRole('REGULAR','MANAGER','ADMIN','INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/enterSecurityQuestions*" access="hasAnyRole('REGULAR','MANAGER','ADMIN','INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/setNewPassword*" access="hasAnyRole('REGULAR','MANAGER','ADMIN','INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/changePassword*" access="hasAnyRole('REGULAR','MANAGER','ADMIN','INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/forgetPassword*" access="permitAll" />
    <security:intercept-url pattern="/securityQuestions*" access="permitAll" />
    <security:intercept-url pattern="/successful*" access="permitAll" />
    <security:intercept-url pattern="/addUserAccount*" access="hasAnyRole('INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/addAccount*" access="hasAnyRole('INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/external*" access="hasAnyRole('INDIVIDUAL','MERCHANT')" />
    <security:intercept-url pattern="/regularEmprequest*" access="hasAnyRole('REGULAR,MANAGER,ADMIN')" />
    <security:intercept-url pattern="/regularrequest*" access="hasAnyRole('REGULAR,MANAGER,ADMIN')" />
    <security:intercept-url pattern="/changeUserPassword*" access="isAuthenticated()" />
    <security:intercept-url pattern="/validateSecurityQuestions*" access="permitAll" />
    <security:intercept-url pattern="/setForgetPassword*" access="permitAll" />
    <security:intercept-url pattern="/**" access="isAuthenticated()" />
    <!-- <intercept-url pattern="/**" access="isAuthenticated()" /> authentication-success-handler-ref="myAuthenticationSuccessHandler" -->
  </security:http>
  <security:authentication-manager>
    <security:authentication-provider ref="authenticationProvider" />
  </security:authentication-manager>
  <bean id="UserDaoImpl" class="com.asu.cse545.group12.dao.UserDaoImpl" />
  <bean id="RoleDaoImpl" class="com.asu.cse545.group12.dao.RoleDaoImpl" />
  <bean id="AccountDaoImpl" class="com.asu.cse545.group12.dao.AccountDaoImpl" />
  <bean id="TransferDaoImpl" class="com.asu.cse545.group12.dao.TransferDaoImpl" />
  <bean id="UserPiiDaoImpl" class="com.asu.cse545.group12.dao.UserPiiDaoImpl" />
  <bean id="UserPiiServiceImpl" class="com.asu.cse545.group12.services.UserPiiServiceImpl" />
  <bean id="UserServiceImpl" class="com.asu.cse545.group12.services.UserServiceImpl" />
  <bean id="AuthorizationDaoImpl" class="com.asu.cse545.group12.dao.AuthorizationDaoImpl" />
  <bean id="AuthorizationServiceImpl" class="com.asu.cse545.group12.services.AuthorizationServiceImpl" />
  <bean id="TransactionDao" class="com.asu.cse545.group12.dao.TransactionDaoImpl" />
  <bean id="TransactionsServiceImpl" class="com.asu.cse545.group12.services.TransactionsServiceImpl" />
  <bean id="AccountServiceImpl" class="com.asu.cse545.group12.services.AccountServiceImpl" />
  <bean id="authenticationSuccessRedirecthandler" class="com.asu.cse545.group12.authentication.SbsAuthenticationHandler" />
  <bean id="logOutSuccessRedirecthandler" class="com.asu.cse545.group12.authentication.SbsLogoutSuccessHandler" />
  <bean id="TransferServiceImpl" class="com.asu.cse545.group12.services.TransferServiceImpl" />
  <bean id="userLoginDetailsDao" class="com.asu.cse545.group12.dao.UserloginDetailsDaoImpl" />
  <bean id="userDetailsService" class="com.asu.cse545.group12.services.SbsUserDetailsService" />
  <bean id="SecurityQuestionsDaoImpl" class="com.asu.cse545.group12.dao.SecurityQuestionsDaoImpl" />
  <bean id="authenticationProvider" class="com.asu.cse545.group12.authentication.LimitLoginAuthentication">
    <property name="userDetailsService" ref="userDetailsService" />
    <property name="passwordEncoder" ref="encoder" />
  </bean>
  <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    <constructor-arg name="strength" value="10" />
  </bean>
  <bean id="hashGenerator" class="com.asu.cse545.group12.hashing.HashGenerator" />
</beans>